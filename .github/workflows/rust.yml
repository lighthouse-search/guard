name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: rust:bookworm

    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v2
    - name: Build
      run: cargo build --verbose --release
    - name: Run tests
      run: cargo test --verbose
    - name: apt-get update -y
      run: apt-get update -y
    - name: apt-get install curl libcap2-bin default-mysql-client dnsutils tree default-mysql-server default-libmysqlclient-dev -y
      run: apt-get install curl libcap2-bin default-mysql-client dnsutils tree default-mysql-server default-libmysqlclient-dev -y
    - name: mkdir guard
      run: mkdir guard

  build-npm:
    runs-on: ubuntu-latest
    container:
      image: node:bookworm

    steps:
      - name: apt-get update -y
        run: apt-get update -y
      - name: apt-get install zip
      - name: cd frontend && npm install && npm run build && cd ..
        run: cd frontend && npm install && npm run build && cd ..
      - name: Run tree
        run: tree
      - name: Move files.
        run: mkdir ./guard/frontend && mv ./frontend/_static ./guard/frontend/_static && mv ./target/release/guard-server ./guard/guard-server
      - name: Zip output folder.
        run: zip -r guard.zip ./guard
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: Release ${{ github.ref_name }}
          files: |
            ./guard.zip