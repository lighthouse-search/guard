stages:
  - build_rust_binary
  - build

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:latest
  GIT_STRATEGY: clone

build_rust_binary:
  image: rust:latest
  stage: build_rust_binary
  services:
    - docker:dind
  script:
    - rustc --version && cargo --version  # For any future debugging.
    - BASE=/builds/oracularhades/guard make build
  artifacts:
    paths:
      - /builds/oracularhades/guard/guard.zip

build:
  image: docker:cli
  stage: build
  services:
    - docker:dind
  needs:
    - job: build_rust_binary
      artifacts: true
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - unzip -o /builds/oracularhades/guard/guard.zip -d /builds/oracularhades/release
    - docker buildx create --use
    - docker buildx inspect --bootstrap
    - docker buildx build --file ./server/Dockerfile --push --tag $DOCKER_IMAGE_NAME /builds/oracularhades