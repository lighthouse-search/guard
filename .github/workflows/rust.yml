name: Rust

on:
  push:
    branches: [ "main", "cicd-changed" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container:
      image: rust:latest

    steps:
    - uses: actions/checkout@v4

    - name: Get release.json
      run: |
        apt update
        apt install -y jq

        VERSION=$(jq -r '.version' release.json)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
      
    - name: make build-linux
      run: BASE=. make build-linux

    - name: tree .
      run: tree .

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: cd server; cargo build --verbose --release
      run: cd server; cargo build --verbose --release

    - name: Upload guard.zip to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-release-artifacts
        path: ./server/target/release/guard-server.exe
        retention-days: 1

  finalise-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]

    steps:
    - name: Set base to "."
      run: echo "base=." >> $GITHUB_ENV

    - name: Download guard.zip from artifacts
      uses: actions/download-artifact@v4
      with:
        name: linux-release-artifacts
        path: ${{ env.base }}/server/target/release/

    - name: Download guard.zip from artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-release-artifacts
        path: ${{ env.base }}/server/target/release/

    - name: make build-finalise
      run: BASE=. make build-finalise

  docker:
    runs-on: ubuntu-latest
    needs: finalise-release

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Get release.json
      run: |
        sudo apt update
        sudo apt install -y jq

        VERSION=$(jq -r '.version' release.json)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: tree .
      run: tree .

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./server/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:${{ github.ref_name == 'main' && env.VERSION || format('{0}-latest', github.ref_name) }}
          ghcr.io/${{ github.repository }}:${{ github.ref_name == 'main' && 'latest' || format('{0}-latest', github.ref_name) }}