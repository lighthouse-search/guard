name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: rust:bookworm

    steps:
    - uses: actions/checkout@v4
    - name: Install Homebrew
      run: |
        apt-get update -y
        apt-get install -y build-essential curl file git
        # Install Homebrew
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        # Add Homebrew to PATH
        echo 'eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)' >> ~/.profile
        eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

    - name: Verify Homebrew Installation
      run: |
        # Check Homebrew installation and version
        which brew
        brew --version

    - name: Install Node.js via Homebrew
      run: |
        # Ensure Homebrew is properly set up
        eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
        brew install node
    - name: Build
      run: cargo build --verbose --release
    - name: Run tests
      run: cargo test --verbose
    - name: apt-get update -y
      run: apt-get update -y
    - name: apt-get install curl libcap2-bin default-mysql-client dnsutils tree default-mysql-server default-libmysqlclient-dev -y
      run: apt-get install curl libcap2-bin default-mysql-client dnsutils tree default-mysql-server default-libmysqlclient-dev -y
    - name: mkdir guard
      run: mkdir guard
    - name: cd frontend && npm install && npm run build && cd ..
      run: cd frontend && npm install && npm run build && cd ..
    - name: Run tree
      run: tree
    - name: Move files.
      run: mkdir ./guard/frontend && mv ./frontend/_static ./guard/frontend/_static && mv ./target/release/guard-server ./guard/guard-server
    - name: Zip output folder.
      run: zip -r guard.zip ./guard
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: false
        title: Release ${{ github.ref_name }}
        files: |
          ./guard.zip
